# Generated by Django 5.1.7 on 2025-08-07 15:17

import dashboard.models
import django.db.models.deletion
import functools
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ApkList",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("apk_name", models.CharField(max_length=255, verbose_name="APK Name")),
                (
                    "icon",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=functools.partial(
                            dashboard.models.get_backup_relative_upload_path,
                            *(),
                            **{"subfolder": "app_icons"}
                        ),
                        verbose_name="Icon",
                    ),
                ),
                (
                    "version_name",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Version Name",
                    ),
                ),
                (
                    "size",
                    models.BigIntegerField(blank=True, null=True, verbose_name="Size"),
                ),
                (
                    "last_time_used",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Last Time Used"
                    ),
                ),
                (
                    "recent_used",
                    models.BooleanField(default=False, verbose_name="Recently Used"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
            ],
            options={
                "verbose_name": "APK List",
                "verbose_name_plural": "APK Lists",
            },
        ),
        migrations.CreateModel(
            name="HomeScreenFolder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Title"
                    ),
                ),
                ("screen_index", models.IntegerField(verbose_name="Screen Index")),
                ("x", models.IntegerField(verbose_name="X Position")),
                ("y", models.IntegerField(verbose_name="Y Position")),
                ("color", models.IntegerField(verbose_name="Color")),
                ("options", models.IntegerField(verbose_name="Options")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
            ],
            options={
                "verbose_name": "Home Screen Folder",
                "verbose_name_plural": "Home Screen Folders",
            },
        ),
        migrations.CreateModel(
            name="Backup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Name")),
                (
                    "model_name",
                    models.CharField(max_length=255, verbose_name="Model Name"),
                ),
                ("pin", models.IntegerField(blank=True, null=True, verbose_name="PIN")),
                ("size", models.BigIntegerField(verbose_name="Size")),
                (
                    "file",
                    models.FileField(
                        upload_to=dashboard.models.backup_file_path,
                        verbose_name="Backup File",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="processing",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="backups",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Backup",
                "verbose_name_plural": "Backups",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ApkPermission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "permission_name",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Permission Name",
                    ),
                ),
                (
                    "permission_group",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Permission Group",
                    ),
                ),
                (
                    "status",
                    models.IntegerField(blank=True, null=True, verbose_name="Status"),
                ),
                (
                    "flags",
                    models.IntegerField(blank=True, null=True, verbose_name="Flags"),
                ),
                (
                    "protection_level",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Protection Level"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "apk",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="permissions",
                        to="dashboard.apklist",
                    ),
                ),
                (
                    "backup",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="apk_permissions",
                        to="dashboard.backup",
                    ),
                ),
            ],
            options={
                "verbose_name": "APK Permission",
                "verbose_name_plural": "APK Permissions",
            },
        ),
        migrations.AddField(
            model_name="apklist",
            name="backup",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="apk_lists",
                to="dashboard.backup",
            ),
        ),
        migrations.CreateModel(
            name="AlarmSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "vibrate_alarm_timer",
                    models.BooleanField(
                        default=False, verbose_name="Vibrate Alarm Timer"
                    ),
                ),
                (
                    "weather_enabled",
                    models.BooleanField(default=True, verbose_name="Weather Enabled"),
                ),
                ("weather_unit", models.IntegerField(verbose_name="Weather Unit")),
                (
                    "timer_sound",
                    models.BooleanField(default=True, verbose_name="Timer Sound"),
                ),
                (
                    "timer_vibration",
                    models.BooleanField(default=False, verbose_name="Timer Vibration"),
                ),
                (
                    "show_mini_timer",
                    models.BooleanField(default=True, verbose_name="Show Mini Timer"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "backup",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="alarm_settings",
                        to="dashboard.backup",
                    ),
                ),
            ],
            options={
                "verbose_name": "Alarm Settings",
                "verbose_name_plural": "Alarm Settings",
            },
        ),
        migrations.CreateModel(
            name="Alarm",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Name"
                    ),
                ),
                ("time", models.TimeField(blank=True, null=True, verbose_name="Time")),
                (
                    "active",
                    models.BooleanField(
                        blank=True, default=False, null=True, verbose_name="Active"
                    ),
                ),
                (
                    "repeat_type",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Repeat Type"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="Created At"
                    ),
                ),
                (
                    "backup",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="alarms",
                        to="dashboard.backup",
                    ),
                ),
            ],
            options={
                "verbose_name": "Alarm",
                "verbose_name_plural": "Alarms",
            },
        ),
        migrations.CreateModel(
            name="BackupLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "current_step",
                    models.IntegerField(default=0, verbose_name="Current Step"),
                ),
                (
                    "total_steps",
                    models.IntegerField(default=0, verbose_name="Total Steps"),
                ),
                (
                    "progress_percentage",
                    models.FloatField(default=0.0, verbose_name="Progress Percentage"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "steps_data",
                    models.JSONField(default=dict, verbose_name="Steps Data"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "backup",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="logs",
                        to="dashboard.backup",
                    ),
                ),
            ],
            options={
                "verbose_name": "Backup Log",
                "verbose_name_plural": "Backup Logs",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="BluetoothDevice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "address",
                    models.CharField(max_length=255, verbose_name="MAC Address"),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Device Name",
                    ),
                ),
                (
                    "device_class",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Device Class"
                    ),
                ),
                (
                    "appearance",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Appearance"
                    ),
                ),
                (
                    "last_connected",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Last Connected"
                    ),
                ),
                (
                    "bond_state",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Bond State"
                    ),
                ),
                (
                    "link_type",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Link Type"
                    ),
                ),
                (
                    "uuids",
                    models.TextField(blank=True, null=True, verbose_name="UUIDs"),
                ),
                (
                    "manufacturer_data",
                    models.TextField(
                        blank=True, null=True, verbose_name="Manufacturer Data"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "backup",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bluetooth_devices",
                        to="dashboard.backup",
                    ),
                ),
            ],
            options={
                "verbose_name": "Bluetooth Device",
                "verbose_name_plural": "Bluetooth Devices",
            },
        ),
        migrations.CreateModel(
            name="BrowserBookmark",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="Title")),
                ("url", models.URLField(max_length=2048, verbose_name="URL")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "backup",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="browser_bookmarks",
                        to="dashboard.backup",
                    ),
                ),
            ],
            options={
                "verbose_name": "Browser Bookmark",
                "verbose_name_plural": "Browser Bookmarks",
            },
        ),
        migrations.CreateModel(
            name="BrowserHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("url", models.TextField(verbose_name="URL")),
                (
                    "title",
                    models.TextField(blank=True, null=True, verbose_name="Title"),
                ),
                (
                    "visit_count",
                    models.IntegerField(default=0, verbose_name="Visit Count"),
                ),
                (
                    "typed_count",
                    models.IntegerField(default=0, verbose_name="Typed Count"),
                ),
                (
                    "last_visit_time",
                    models.DateTimeField(verbose_name="Last Visit Time"),
                ),
                ("hidden", models.BooleanField(default=False, verbose_name="Hidden")),
                ("source", models.CharField(max_length=50, verbose_name="Source")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "backup",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="browser_histories",
                        to="dashboard.backup",
                    ),
                ),
            ],
            options={
                "verbose_name": "Browser History",
                "verbose_name_plural": "Browser History",
                "ordering": ["-last_visit_time"],
            },
        ),
        migrations.CreateModel(
            name="BrowserSearch",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("search_term", models.TextField(verbose_name="Search Term")),
                ("search_time", models.DateTimeField(verbose_name="Search Time")),
                (
                    "search_engine",
                    models.CharField(max_length=100, verbose_name="Search Engine"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "backup",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="browser_searches",
                        to="dashboard.backup",
                    ),
                ),
            ],
            options={
                "verbose_name": "Browser Search",
                "verbose_name_plural": "Browser Searches",
            },
        ),
        migrations.CreateModel(
            name="BrowserTab",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("url", models.TextField(verbose_name="URL")),
                ("title", models.TextField(verbose_name="Title")),
                ("last_accessed", models.DateTimeField(verbose_name="Last Accessed")),
                (
                    "navigation_state",
                    models.CharField(max_length=50, verbose_name="Navigation State"),
                ),
                (
                    "is_incognito",
                    models.BooleanField(default=False, verbose_name="Is Incognito"),
                ),
                (
                    "is_pinned",
                    models.BooleanField(default=False, verbose_name="Is Pinned"),
                ),
                (
                    "backup",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="browser_tabs",
                        to="dashboard.backup",
                    ),
                ),
            ],
            options={
                "verbose_name": "Browser Tab",
                "verbose_name_plural": "Browser Tabs",
            },
        ),
        migrations.CreateModel(
            name="Contact",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Name")),
                (
                    "profile_image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=functools.partial(
                            dashboard.models.get_backup_relative_upload_path,
                            *(),
                            **{"subfolder": "contact_images"}
                        ),
                        verbose_name="Profile Image",
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(max_length=255, verbose_name="Phone Number"),
                ),
                (
                    "date_of_birth",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Date of Birth"
                    ),
                ),
                (
                    "is_favorite",
                    models.BooleanField(
                        blank=True, null=True, verbose_name="Is Favorite"
                    ),
                ),
                (
                    "backup",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contacts",
                        to="dashboard.backup",
                    ),
                ),
            ],
            options={
                "verbose_name": "Contact",
                "verbose_name_plural": "Contacts",
            },
        ),
        migrations.CreateModel(
            name="ChatThread",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("address", models.CharField(max_length=255, verbose_name="Address")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "backup",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="chat_threads",
                        to="dashboard.backup",
                    ),
                ),
                (
                    "contact",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="chat_threads",
                        to="dashboard.contact",
                    ),
                ),
            ],
            options={
                "verbose_name": "Chat Thread",
                "verbose_name_plural": "Chat Threads",
            },
        ),
        migrations.CreateModel(
            name="CallLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("number", models.CharField(max_length=255, verbose_name="Number")),
                (
                    "name",
                    models.CharField(blank=True, max_length=255, verbose_name="Name"),
                ),
                ("date", models.DateTimeField(verbose_name="Date")),
                ("duration", models.IntegerField(verbose_name="Duration")),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("INCOMING", "Incoming"),
                            ("OUTGOING", "Outgoing"),
                            ("MISSED", "Missed"),
                            ("REJECTED", "Rejected"),
                        ],
                        max_length=20,
                        verbose_name="Type",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "backup",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="call_logs",
                        to="dashboard.backup",
                    ),
                ),
                (
                    "contact",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="call_logs",
                        to="dashboard.contact",
                    ),
                ),
            ],
            options={
                "verbose_name": "Call Log",
                "verbose_name_plural": "Call Logs",
                "ordering": ["-date"],
            },
        ),
        migrations.CreateModel(
            name="Email",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "email_address",
                    models.EmailField(max_length=255, verbose_name="Email Address"),
                ),
                (
                    "account_name",
                    models.CharField(max_length=255, verbose_name="Account Name"),
                ),
                (
                    "account_type",
                    models.CharField(max_length=50, verbose_name="Account Type"),
                ),
                (
                    "is_primary",
                    models.BooleanField(default=False, verbose_name="Is Primary"),
                ),
                (
                    "is_verified",
                    models.BooleanField(default=False, verbose_name="Is Verified"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "backup",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="emails",
                        to="dashboard.backup",
                    ),
                ),
            ],
            options={
                "verbose_name": "Email",
                "verbose_name_plural": "Emails",
            },
        ),
        migrations.CreateModel(
            name="File",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "file_name",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="File Name"
                    ),
                ),
                (
                    "file_extension",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="File Extension",
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        blank=True,
                        max_length=1024,
                        null=True,
                        upload_to=functools.partial(
                            dashboard.models.get_backup_relative_upload_path,
                            *(),
                            **{"subfolder": "files"}
                        ),
                        verbose_name="File Content",
                    ),
                ),
                (
                    "file_size",
                    models.BigIntegerField(
                        blank=True, null=True, verbose_name="File Size"
                    ),
                ),
                (
                    "mime_type",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="MIME Type"
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="Category"
                    ),
                ),
                (
                    "created_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Created Date"
                    ),
                ),
                (
                    "modified_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Modified Date"
                    ),
                ),
                (
                    "owner_package",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Owner Package",
                    ),
                ),
                (
                    "is_hidden",
                    models.BooleanField(default=False, verbose_name="Is Hidden"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "backup",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="files",
                        to="dashboard.backup",
                    ),
                ),
            ],
            options={
                "verbose_name": "File",
                "verbose_name_plural": "Files",
            },
        ),
        migrations.CreateModel(
            name="BrowserDownload",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("url", models.TextField(blank=True, null=True, verbose_name="URL")),
                (
                    "file_name",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="File Name"
                    ),
                ),
                (
                    "file_path",
                    models.CharField(
                        blank=True, max_length=1024, null=True, verbose_name="File Path"
                    ),
                ),
                ("download_time", models.DateTimeField(verbose_name="Download Time")),
                (
                    "bytes_downloaded",
                    models.BigIntegerField(verbose_name="Bytes Downloaded"),
                ),
                (
                    "state",
                    models.CharField(
                        choices=[
                            ("complete", "Complete"),
                            ("in_progress", "In Progress"),
                            ("interrupted", "Interrupted"),
                        ],
                        max_length=50,
                        verbose_name="State",
                    ),
                ),
                (
                    "tab_url",
                    models.TextField(blank=True, null=True, verbose_name="Tab URL"),
                ),
                (
                    "backup",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="browser_downloads",
                        to="dashboard.backup",
                    ),
                ),
                (
                    "file",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="downloads",
                        to="dashboard.file",
                    ),
                ),
            ],
            options={
                "verbose_name": "Browser Download",
                "verbose_name_plural": "Browser Downloads",
            },
        ),
        migrations.CreateModel(
            name="HomeScreenLayout",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("rows", models.IntegerField(verbose_name="Rows")),
                ("columns", models.IntegerField(verbose_name="Columns")),
                ("page_count", models.IntegerField(verbose_name="Page Count")),
                ("has_zero_page", models.BooleanField(verbose_name="Has Zero Page")),
                (
                    "is_portrait_only",
                    models.BooleanField(verbose_name="Is Portrait Only"),
                ),
                (
                    "notification_panel_enabled",
                    models.BooleanField(verbose_name="Notification Panel Enabled"),
                ),
                ("layout_locked", models.BooleanField(verbose_name="Layout Locked")),
                (
                    "quick_access_enabled",
                    models.BooleanField(verbose_name="Quick Access Enabled"),
                ),
                ("badge_enabled", models.BooleanField(verbose_name="Badge Enabled")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "backup",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="home_screen_layouts",
                        to="dashboard.backup",
                    ),
                ),
            ],
            options={
                "verbose_name": "Home Screen Layout",
                "verbose_name_plural": "Home Screen Layouts",
            },
        ),
        migrations.CreateModel(
            name="HomeScreenItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "item_type",
                    models.CharField(
                        choices=[
                            ("widget", "Widget"),
                            ("app", "App"),
                            ("folder", "Folder"),
                        ],
                        max_length=50,
                        verbose_name="Item Type",
                    ),
                ),
                ("screen_index", models.IntegerField(verbose_name="Screen Index")),
                ("x", models.IntegerField(default=0, verbose_name="X Position")),
                ("y", models.IntegerField(default=0, verbose_name="Y Position")),
                ("span_x", models.IntegerField(null=True, verbose_name="Span X")),
                ("span_y", models.IntegerField(null=True, verbose_name="Span Y")),
                (
                    "package_name",
                    models.CharField(
                        max_length=255, null=True, verbose_name="Package Name"
                    ),
                ),
                (
                    "class_name",
                    models.CharField(
                        max_length=255, null=True, verbose_name="Class Name"
                    ),
                ),
                (
                    "title",
                    models.CharField(max_length=255, null=True, verbose_name="Title"),
                ),
                (
                    "app_widget_id",
                    models.IntegerField(null=True, verbose_name="App Widget ID"),
                ),
                (
                    "is_hidden",
                    models.BooleanField(default=False, verbose_name="Is Hidden"),
                ),
                (
                    "location",
                    models.CharField(
                        choices=[
                            ("home", "Home"),
                            ("hotseat", "Hotseat"),
                            ("homeOnly", "Home Only"),
                        ],
                        max_length=50,
                        verbose_name="Location",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "apk",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="home_screen_items",
                        to="dashboard.apklist",
                    ),
                ),
                (
                    "backup",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="home_screen_items",
                        to="dashboard.backup",
                    ),
                ),
                (
                    "folder",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="items",
                        to="dashboard.homescreenfolder",
                    ),
                ),
                (
                    "layout",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="dashboard.homescreenlayout",
                    ),
                ),
            ],
            options={
                "verbose_name": "Home Screen Item",
                "verbose_name_plural": "Home Screen Items",
            },
        ),
        migrations.AddField(
            model_name="homescreenfolder",
            name="layout",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="folders",
                to="dashboard.homescreenlayout",
            ),
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date",
                    models.DateTimeField(blank=True, null=True, verbose_name="Date"),
                ),
                ("body", models.TextField(blank=True, null=True, verbose_name="Body")),
                (
                    "status",
                    models.IntegerField(blank=True, null=True, verbose_name="Status"),
                ),
                (
                    "seen",
                    models.BooleanField(blank=True, null=True, verbose_name="Seen"),
                ),
                (
                    "sim_slot",
                    models.IntegerField(blank=True, null=True, verbose_name="SIM Slot"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "backup",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to="dashboard.backup",
                    ),
                ),
                (
                    "chat_thread",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to="dashboard.chatthread",
                    ),
                ),
            ],
            options={
                "verbose_name": "Message",
                "verbose_name_plural": "Messages",
                "ordering": ["date"],
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("message", models.TextField(blank=True)),
                ("is_seen", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notification",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Wallpaper",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[("home", "Home"), ("lock", "Lock"), ("both", "Both")],
                        max_length=50,
                        verbose_name="Type",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=functools.partial(
                            dashboard.models.get_backup_relative_upload_path,
                            *(),
                            **{"subfolder": "wallpapers"}
                        ),
                        verbose_name="Wallpaper Image",
                    ),
                ),
                (
                    "original_path",
                    models.CharField(
                        blank=True,
                        max_length=1024,
                        null=True,
                        verbose_name="Original File Path",
                    ),
                ),
                (
                    "is_default",
                    models.BooleanField(default=False, verbose_name="Is Default"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "backup",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="wallpapers",
                        to="dashboard.backup",
                    ),
                ),
            ],
            options={
                "verbose_name": "Wallpaper",
                "verbose_name_plural": "Wallpapers",
            },
        ),
        migrations.CreateModel(
            name="WifiNetwork",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ssid", models.CharField(max_length=255, verbose_name="SSID")),
                (
                    "security_type",
                    models.CharField(
                        choices=[
                            ("NONE", "None"),
                            ("WPA_PSK", "WPA-PSK"),
                            ("WPA2_PSK", "WPA2-PSK"),
                            ("WPA_WPA2_PSK", "WPA/WPA2-PSK"),
                            ("SAE", "WPA3-SAE"),
                            ("EAP", "EAP Enterprise"),
                            ("OTHER", "Other"),
                        ],
                        max_length=50,
                        verbose_name="Security Type",
                    ),
                ),
                (
                    "password",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Password"
                    ),
                ),
                (
                    "hidden",
                    models.BooleanField(default=False, verbose_name="Hidden Network"),
                ),
                (
                    "frequency",
                    models.CharField(
                        blank=True, max_length=10, null=True, verbose_name="Frequency"
                    ),
                ),
                (
                    "last_connected",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Last Connected"
                    ),
                ),
                (
                    "is_saved",
                    models.BooleanField(default=True, verbose_name="Saved Network"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "backup",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="wifi_networks",
                        to="dashboard.backup",
                    ),
                ),
            ],
            options={
                "verbose_name": "WiFi Network",
                "verbose_name_plural": "WiFi Networks",
            },
        ),
        migrations.CreateModel(
            name="WorldClock",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("clock_id", models.IntegerField(verbose_name="Clock ID")),
                (
                    "city_name",
                    models.CharField(max_length=255, verbose_name="City Name"),
                ),
                ("timezone", models.CharField(max_length=100, verbose_name="Timezone")),
                ("dst_offset", models.IntegerField(verbose_name="DST Offset")),
                ("home_zone_id", models.IntegerField(verbose_name="Home Zone ID")),
                ("point_x", models.IntegerField(verbose_name="Point X")),
                ("point_y", models.IntegerField(verbose_name="Point Y")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "backup",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="world_clocks",
                        to="dashboard.backup",
                    ),
                ),
            ],
            options={
                "verbose_name": "World Clock",
                "verbose_name_plural": "World Clocks",
            },
        ),
    ]
